<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://maoerniu.github.io</id>
    <title>二牛的博客</title>
    <updated>2019-06-24T21:41:46.860Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://maoerniu.github.io"/>
    <link rel="self" href="https://maoerniu.github.io/atom.xml"/>
    <subtitle>水滴石穿</subtitle>
    <logo>https://maoerniu.github.io/images/avatar.png</logo>
    <icon>https://maoerniu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 二牛的博客</rights>
    <entry>
        <title type="html"><![CDATA[Prometheus入门]]></title>
        <id>https://maoerniu.github.io/post/prometheus-ru-men</id>
        <link href="https://maoerniu.github.io/post/prometheus-ru-men">
        </link>
        <updated>2019-06-24T21:34:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-简单介绍">一、简单介绍</h3>
<h5 id="prometheus组件">Prometheus组件</h5>
<pre><code>Prometheus：监控服务，从被监控机上拉取监控信息，并通过配置的规则文件触发报警
explorter: 采集器
    根据不同监控内容有不同采集器
    node-explorter
    jmx-explorter
    mysql-explorter
    elasticseach-explorter
    ...
altermanager:报警器
    用来配置报警发送方式
</code></pre>
<p>prometheus及相关exporter组件下载地址：<a href="https://prometheus.io/download/">https://prometheus.io/download/</a></p>
<h5 id="部署">部署</h5>
<p><strong>安装prometheus</strong></p>
<p>下载最新版本prometheus<br>
<code>wget https://github.com/prometheus/prometheus/releases/download/v2.10.0/prometheus-2.10.0.linux-amd64.tar.gz</code></p>
<pre><code>tar -zxf prometheus-2.10.0.linux-amd64.tar.gz
mv prometheus-2.10.0.linux-amd64 /opt/prometheus
</code></pre>
<p>下载最新版本alertmanager<br>
<code>https://github.com/prometheus/alertmanager/releases/download/v0.17.0/alertmanager-0.17.0.linux-amd64.tar.gz</code></p>
<p><strong>优雅的启动prometheus</strong></p>
<p><strong>编写启动脚本：</strong><br>
vim /opt/prometheus/prometheus.sh</p>
<pre><code>#!/bin/bash
/opt/prometheus/prometheus --config.file=/opt/prometheus/prometheus.yml &amp;&gt;&gt; /var/log/prometheus.log
</code></pre>
<p>#进入system目录，编写systemd服务脚本<br>
cd /usr/lib/systemd/system<br>
vim prometheus.service</p>
<pre><code> [Unit]
   Description=Prometheus
   Documentation=https://prometheus.io/docs/introduction/overview/
   Wants=network-online.target
   After=network-online.target
   
   [Service]
   User=root
   Group=root
   Type=simple
   ExecStart=/opt/prometheus/prometheus.sh  # 启动脚本
   
   [Install]
   WantedBy=multi-user.target
</code></pre>
<p><strong>启动prometheus</strong></p>
<pre><code>systemctl daemon-reload # 重新加载daemon
systemctl start prometheus.service #启动
systemctl status prometheus.service #查看启动状态
systemctl enable prometheus.service #添加开机启动
</code></pre>
<h3 id="监控主机">监控主机</h3>
<p>node_exporter安装<br>
下载最新版的node_exporter, node_exporter-0.18.1.linux-amd64.tar.gz</p>
<pre><code>tar -zxf node_exporter-0.18.1.linux-amd64.tar.gz
cp node_exporter-0.18.1.linux-amd64/node_exporter /usr/local/bin/

</code></pre>
<p>把node_exporter做成服务<br>
创建node_exporter.service文件</p>
<pre><code># vim /usr/lib/systemd/system/node_exporter.service
[Unit]
Description=Prometheus node_exporter
[Service]
User=nobody
ExecStart=/usr/local/bin/node_exporter --log.level=error
ExecStop=/usr/bin/killall node_exporter
MemoryLimit=300M
CPUQuota=100%

[Install]
WantedBy=default.target
</code></pre>
<p>使用MemoryLimit限制内存使用大小<br>
使用CPUQuata限制cpu使用核数</p>
<pre><code>systemctl daemon-reload
systemctl enable node_exporter.service
systemctl start node_exporter
</code></pre>
<h3 id="安装grafana">安装grafana</h3>
<pre><code>wget https://dl.grafana.com/oss/release/grafana-6.2.4-1.x86_64.rpm
yum localinstall grafana-6.2.4-1.x86_64.rpm

systemctl daemon-reload
systemctl start grafana-server
systemctl status grafana-server
</code></pre>
<p><strong>配置数据源</strong></p>
<h3 id="监控mysql">监控mysql</h3>
<p>在被监控的mysql主机上操作<br>
1 下载mysqld_exporter <a href="https://github.com/prometheus/mysqld_exporter/releases">https://github.com/prometheus/mysqld_exporter/releases</a></p>
<p>2 进入数据库创建用户并授权</p>
<pre><code>mysql&gt; GRANT REPLICATION CLIENT, PROCESS ON *.* TO 'prometheus'@'localhost' identified by 'prometheus';
mysql&gt; GRANT SELECT ON performance_schema.* TO 'prometheus'@'localhost';
</code></pre>
<p>3 创建.my.cnf文件</p>
<pre><code>$ cat ~/.my.cnf
[client]
user=prometheus
password=prometheus
</code></pre>
<p>默认情况下，运行./mysqld_exporter时，会去当前用户目录下查找.my.cnf, 可以通过参数--config.my-cnf=&quot;yourpath/.my.cnf&quot;, 参数--web.listen-address=:9104指定端口</p>
<p>4 创建成服务
使用环境变量启动</p>
<pre><code>$ vim /usr/lib/systemd/system/mysqld_exporter.service
[Unit]
Description=mysqld_exporter
After=network.target
[Service]
Type=simple
User=prometheus
Environment=DATA_SOURCE_NAME=prometheus:prometheus@tcp(127.0.0.1:3306)/?loc=Local
ExecStart=/opt/prometheus/mysqld_exporter/mysqld_exporter
Restart=on-failure
[Install]
WantedBy=multi-user.target
</code></pre>
<p>使用配置文件启动<br>
在mysqld_exporter目录下创建mysqld_exporter.sh启动脚本</p>
<pre><code>#!/bin/bash
/opt/prometheus/mysqld_exporter/mysqld_exporter --config.my-cnf=&quot;/opt/prometheus/mysqld_exporter/.my.cnf&quot; --web.listen-address=:9104
</code></pre>
<p>创建mysqld_exporter.service文件</p>
<pre><code>$ vim /usr/lib/systemd/system/mysqld_exporter.service
[Unit]
Description=mysqld_exporter
After=network.target
[Service]
Type=simple
User=prometheus
#指定启动脚本路径
ExecStart=/opt/prometheus/mysqld_exporter/mysqld_exporter.sh
Restart=on-failure
[Install]
WantedBy=multi-user.target
</code></pre>
<p>上面两种方式任选一个
<code>systemctl start mysqld_exporter</code>
启动服务</p>
<h3 id="监控redis">监控redis</h3>
<p>下载redis_exporter, <a href="https://github.com/oliver006/redis_exporter/releases">https://github.com/oliver006/redis_exporter/releases</a></p>
<p>或者</p>
<pre><code>    $ go get github.com/oliver006/redis_exporter
    $ cd $GOPATH/src/github.com/oliver006/redis_exporter
    $ go build
    $ ./redis_exporter &lt;flags&gt;
</code></pre>
]]></content>
    </entry>
</feed>